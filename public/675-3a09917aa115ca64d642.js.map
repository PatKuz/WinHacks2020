{"version":3,"sources":["webpack://class-connect/./node_modules/@firebase/storage/dist/index.esm.js"],"names":["DEFAULT_HOST","FirebaseStorageError","_super","code","message","_this","call","this","prependCode","customData","serverResponse","Object","setPrototypeOf","prototype","_codeEquals","defineProperty","get","enumerable","configurable","set","unknown","canceled","cannotSliceBlob","invalidArgument","appDeleted","invalidRootOperation","name","invalidFormat","format","internalError","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","StringData","data","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","parts","DataURLParts","base64","rest","value","decoded","decodeURIComponent","e","percentEncodedBytes_","dataUrl","dataURLContentType_","b","i","length","c","charCodeAt","push","Uint8Array","hasMinus","indexOf","hasUnder","hasPlus","hasSlash","replace","bytes","atob","array","dataURL","matches","match","middle","s","end","substring","ErrorCode","TaskEvent","STATE_CHANGED","TaskState","RUNNING","PAUSED","SUCCESS","CANCELED","ERROR","taskStateFromInternalTaskState","state","NetworkXhrIo","sent_","xhr_","XMLHttpRequest","errorCode_","NO_ERROR","sendPromise_","Promise","resolve","addEventListener","ABORT","NETWORK_ERROR","send","url","method","body","headers","open","undefined","key","hasOwnProperty","setRequestHeader","toString","getErrorCode","getStatus","status","getResponseText","responseText","abort","getResponseHeader","header","addUploadProgressListener","listener","upload","removeUploadProgressListener","removeEventListener","XhrIoPool","createXhrIo","Location","bucket","path","path_","fullServerUrl","encode","encodeURIComponent","bucketOnlyServerUrl","makeFromBucketSpec","bucketString","bucketLocation","makeFromUrl","location","bucketDomain","gsRegex","RegExp","httpModify","loc","firebaseStorageHost","groups","regex","indices","postModify","charAt","slice","group","captures","exec","bucketValue","pathValue","invalidUrl","FailRequest","error","promise_","reject","getPromise","cancel","_appDelete","isString","p","String","isNativeBlob","isNativeBlobDefined","Blob","validateNumber","argument","minValue","maxValue","makeUrl","urlPart","makeQueryString","params","queryPart","NetworkRequest","successCodes","additionalRetryCodes","callback","errorCallback","timeout","progressCallback","pool","pendingXhr_","backoffId_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","progressCallback_","timeout_","pool_","resolve_","reject_","start_","self","backoffDone","requestWentThrough","err","xhr","wasSuccessCode","result","RequestEndStatus","f","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","args","_i","arguments","apply","callWithDelay","millis","setTimeout","handler","success","waitMillis","Math","random","stopped","stop","wasTimeout","clearTimeout","start","backoffCallback","progressListener","then","hitServer","isRetryStatusCode_","successCode","wasCanceled","progressEvent","loaded","total","lengthComputable","appDelete","isFiveHundredCode","isExtraRetryCode","isRequestSpecificRetryCode","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob","bb","append","FbsBlob","elideCopy","size","blobType","data_","type","ArrayBuffer","byteLength","size_","type_","startByte","endByte","sliced","blob","webkitSlice","mozSlice","sliceBlob","buffer","blobby","map","val","uint8Arrays","finalLength_1","forEach","merged_1","index_1","uploadData","jsonObjectOrNull","obj","JSON","parse","Array","isArray","lastComponent","index","lastIndexOf","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","getMappings","mappings","nameMapping","_metadata","fullPath","xformPath","sizeMapping","Number","fromResource","service","resource","len","mapping","_makeStorageReference","addRef","fromResourceString","resourceString","toResourceString","stringify","fromResponseString","listResult","prefixes","items","nextPageToken","_a","pathWithoutTrailingSlash","reference","_b","_c","item","fromBackendResponse","RequestInfo","urlParams","errorHandler","handlerCheck","cndn","metadataHandler","text","downloadUrlHandler","tokens","split","token","alt","downloadUrlFromResourceString","sharedErrorHandler","newErr","objectErrorHandler","shared","getMetadata","maxOperationRetryTime","requestInfo","list","delimiter","pageToken","maxResults","isRoot","listHandler","metadataForUpload_","metadataClone","assign","determineContentType_","ResumableUploadStatus","current","finalized","checkResumeHeader_","allowed","RESUMABLE_UPLOAD_CHUNK_SIZE","continueResumableUpload","chunkSize","status_","bytesLeft","bytesToUpload","min","maxUploadRetryTime","uploadStatus","newCurrent","Observer","nextOrObserver","complete","next","observer","argsToForward","UploadTask","ref","_transferred","_needToFetchStatus","_needToFetchMetadata","_observers","_error","_uploadUrl","_request","_chunkMultiplier","_resolve","_reject","_ref","_blob","_mappings","_resumable","_shouldDoResumable","_state","_errorHandler","completeTransitions_","_transition","_metadataErrorHandler","_promise","_start","_makeProgressCallback","sizeBefore","_updateProgress","_createResumable","_fetchStatus","_fetchMetadata","_continueUpload","_oneShotUpload","_resolveToken","storage","_getAuthToken","authToken","metadataForUpload","createResumableUpload","_location","createRequest","_makeRequest","sizeString","isNaN","getResumableUploadStatus","statusRequest","uploadRequest","newStatus","_increaseMultiplier","metadataRequest","boundary","str","genBoundary","metadata_","preBlobPart","postBlobPart","multipartUpload","multipartRequest","transferred","old","_notifyObservers","wasPaused","externalState","bytesTransferred","totalBytes","task","on","completed","_addObserver","_removeObserver","onFulfilled","onRejected","catch","_notifyObserver","splice","_finishPromise","triggered","bind","snapshot","resume","valid","pause","Reference","_service","_newRef","newPath","_throwIfRoot","listAll","accumulator","listAllHelper","nextPage","label","list$1","sent","options","op","updateMetadata$1","updateMetadata","getDownloadURL","getDownloadUrl","deleteObject$1","_xhr","_text","deleteObject","_getChild","childPath","canonicalChildPath","filter","component","join","child","isUrl","test","refFromPath","StorageService","_bucket","includes","serviceOrRef","pathOrUrl","app","_authProvider","_pool","_url","_firebaseVersion","config","_appId","_deleted","_maxOperationRetryTime","_maxUploadRetryTime","_requests","Set","time","POSITIVE_INFINITY","auth","tokenData","getImmediate","optional","getToken","accessToken","_delete","request","clear","request_1","appId","firebaseVersion","addGmpidHeader_","addAuthHeader_","addVersionHeader_","makeRequest","add","delete","uploadBytesResumable$1","uploadBytesResumable","getMetadata$2","getMetadata$1","ref$1","instance","namespaceExports","UploadTaskSnapshotCompat","_delegate","UploadTaskCompat","wrappedNextOrObserver","taskSnapshot","ListResultCompat","ReferenceCompat","_getChild$1","root","parent","put","putString","listAll$1","r","list$2","updateMetadata$2","getDownloadURL$1","deleteObject$2","StorageServiceCompat","INTERNAL","refFromURL","setMaxUploadRetryTime","setMaxOperationRetryTime","factory","container","instanceIdentifier","getProvider","authProvider","Storage","registerComponent","setServiceProps","setMultipleInstances","registerVersion"],"mappings":"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","file":"675-3a09917aa115ca64d642.js","sourcesContent":["import firebase from '@firebase/app';\nimport { __extends, __spreadArray, __awaiter, __generator, __assign } from 'tslib';\nimport { FirebaseError } from '@firebase/util';\nimport { Component } from '@firebase/component';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\n\n/**\r\n * Domain name for firebase storage.\r\n */\n\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\n\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\n\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\n\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n/**\r\n * An error returned by the Firebase Storage SDK.\r\n * @public\r\n */\n\nvar FirebaseStorageError =\n/** @class */\nfunction (_super) {\n  __extends(FirebaseStorageError, _super);\n  /**\r\n   * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\r\n   *  added to the end of the message.\r\n   * @param message  - Error message.\r\n   */\n\n\n  function FirebaseStorageError(code, message) {\n    var _this = _super.call(this, prependCode(code), \"Firebase Storage: \" + message + \" (\" + prependCode(code) + \")\") || this;\n    /**\r\n     * Stores custom error data unque to FirebaseStorageError.\r\n     */\n\n\n    _this.customData = {\n      serverResponse: null\n    }; // Without this, `instanceof FirebaseStorageError`, in tests for example,\n    // returns false.\n\n    Object.setPrototypeOf(_this, FirebaseStorageError.prototype);\n    return _this;\n  }\n  /**\r\n   * Compares a StorageErrorCode against this error's code, filtering out the prefix.\r\n   */\n\n\n  FirebaseStorageError.prototype._codeEquals = function (code) {\n    return prependCode(code) === this.code;\n  };\n\n  Object.defineProperty(FirebaseStorageError.prototype, \"message\", {\n    /**\r\n     * Error message including serverResponse if available.\r\n     */\n    get: function get() {\n      if (this.customData.serverResponse) {\n        return this.message + \"\\n\" + this.customData.serverResponse;\n      } else {\n        return this.message;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\n    /**\r\n     * Optional response message that was added by the server.\r\n     */\n    get: function get() {\n      return this.customData.serverResponse;\n    },\n    set: function set(serverResponse) {\n      this.customData.serverResponse = serverResponse;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return FirebaseStorageError;\n}(FirebaseError);\n\nfunction prependCode(code) {\n  return 'storage/' + code;\n}\n\nfunction unknown() {\n  var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';\n  return new FirebaseStorageError(\"unknown\"\n  /* UNKNOWN */\n  , message);\n}\n\nfunction objectNotFound(path) {\n  return new FirebaseStorageError(\"object-not-found\"\n  /* OBJECT_NOT_FOUND */\n  , \"Object '\" + path + \"' does not exist.\");\n}\n\nfunction quotaExceeded(bucket) {\n  return new FirebaseStorageError(\"quota-exceeded\"\n  /* QUOTA_EXCEEDED */\n  , \"Quota for bucket '\" + bucket + \"' exceeded, please view quota on \" + 'https://firebase.google.com/pricing/.');\n}\n\nfunction unauthenticated() {\n  var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';\n  return new FirebaseStorageError(\"unauthenticated\"\n  /* UNAUTHENTICATED */\n  , message);\n}\n\nfunction unauthorized(path) {\n  return new FirebaseStorageError(\"unauthorized\"\n  /* UNAUTHORIZED */\n  , \"User does not have permission to access '\" + path + \"'.\");\n}\n\nfunction retryLimitExceeded() {\n  return new FirebaseStorageError(\"retry-limit-exceeded\"\n  /* RETRY_LIMIT_EXCEEDED */\n  , 'Max retry time for operation exceeded, please try again.');\n}\n\nfunction canceled() {\n  return new FirebaseStorageError(\"canceled\"\n  /* CANCELED */\n  , 'User canceled the upload/download.');\n}\n\nfunction invalidUrl(url) {\n  return new FirebaseStorageError(\"invalid-url\"\n  /* INVALID_URL */\n  , \"Invalid URL '\" + url + \"'.\");\n}\n\nfunction invalidDefaultBucket(bucket) {\n  return new FirebaseStorageError(\"invalid-default-bucket\"\n  /* INVALID_DEFAULT_BUCKET */\n  , \"Invalid default bucket '\" + bucket + \"'.\");\n}\n\nfunction noDefaultBucket() {\n  return new FirebaseStorageError(\"no-default-bucket\"\n  /* NO_DEFAULT_BUCKET */\n  , 'No default bucket ' + \"found. Did you set the '\" + CONFIG_STORAGE_BUCKET_KEY + \"' property when initializing the app?\");\n}\n\nfunction cannotSliceBlob() {\n  return new FirebaseStorageError(\"cannot-slice-blob\"\n  /* CANNOT_SLICE_BLOB */\n  , 'Cannot slice blob for upload. Please retry the upload.');\n}\n\nfunction serverFileWrongSize() {\n  return new FirebaseStorageError(\"server-file-wrong-size\"\n  /* SERVER_FILE_WRONG_SIZE */\n  , 'Server recorded incorrect upload file size, please retry the upload.');\n}\n\nfunction noDownloadURL() {\n  return new FirebaseStorageError(\"no-download-url\"\n  /* NO_DOWNLOAD_URL */\n  , 'The given file does not have any download URLs.');\n}\n\nfunction invalidArgument(message) {\n  return new FirebaseStorageError(\"invalid-argument\"\n  /* INVALID_ARGUMENT */\n  , message);\n}\n\nfunction appDeleted() {\n  return new FirebaseStorageError(\"app-deleted\"\n  /* APP_DELETED */\n  , 'The Firebase app was deleted.');\n}\n/**\r\n * @param name - The name of the operation that was invalid.\r\n */\n\n\nfunction invalidRootOperation(name) {\n  return new FirebaseStorageError(\"invalid-root-operation\"\n  /* INVALID_ROOT_OPERATION */\n  , \"The operation '\" + name + \"' cannot be performed on a root reference, create a non-root \" + \"reference using child, such as .child('file.png').\");\n}\n/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */\n\n\nfunction invalidFormat(format, message) {\n  return new FirebaseStorageError(\"invalid-format\"\n  /* INVALID_FORMAT */\n  , \"String does not match format '\" + format + \"': \" + message);\n}\n/**\r\n * @param message - A message describing the internal error.\r\n */\n\n\nfunction internalError(message) {\n  throw new FirebaseStorageError(\"internal-error\"\n  /* INTERNAL_ERROR */\n  , 'Internal error: ' + message);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An enumeration of the possible string formats for upload.\r\n * @public\r\n */\n\n\nvar StringFormat = {\n  /**\r\n   * Indicates the string should be interpreted \"raw\", that is, as normal text.\r\n   * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\r\n   * sequence.\r\n   * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\r\n   * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\r\n   */\n  RAW: 'raw',\n\n  /**\r\n   * Indicates the string should be interpreted as base64-encoded data.\r\n   * Padding characters (trailing '='s) are optional.\r\n   * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\r\n   * ad 69 8e fb e1 3a b7 bf eb 97\r\n   */\n  BASE64: 'base64',\n\n  /**\r\n   * Indicates the string should be interpreted as base64url-encoded data.\r\n   * Padding characters (trailing '='s) are optional.\r\n   * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\r\n   * ad 69 8e fb e1 3a b7 bf eb 97\r\n   */\n  BASE64URL: 'base64url',\n\n  /**\r\n   * Indicates the string is a data URL, such as one obtained from\r\n   * canvas.toDataURL().\r\n   * Example: the string 'data:application/octet-stream;base64,aaaa'\r\n   * becomes the byte sequence\r\n   * 69 a6 9a\r\n   * (the content-type \"application/octet-stream\" is also applied, but can\r\n   * be overridden in the metadata object).\r\n   */\n  DATA_URL: 'data_url'\n};\n\nvar StringData =\n/** @class */\nfunction () {\n  function StringData(data, contentType) {\n    this.data = data;\n    this.contentType = contentType || null;\n  }\n\n  return StringData;\n}();\n\nfunction dataFromString(format, stringData) {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n\n    case StringFormat.DATA_URL:\n      return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\n    // do nothing\n  } // assert(false);\n\n\n  throw unknown();\n}\n\nfunction utf8Bytes_(value) {\n  var b = [];\n\n  for (var i = 0; i < value.length; i++) {\n    var c = value.charCodeAt(i);\n\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | c >> 6, 128 | c & 63);\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            var hi = c;\n            var lo = value.charCodeAt(++i);\n            c = 65536 | (hi & 1023) << 10 | lo & 1023;\n            b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        }\n      }\n    }\n  }\n\n  return new Uint8Array(b);\n}\n\nfunction percentEncodedBytes_(value) {\n  var decoded;\n\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n\n  return utf8Bytes_(decoded);\n}\n\nfunction base64Bytes_(format, value) {\n  switch (format) {\n    case StringFormat.BASE64:\n      {\n        var hasMinus = value.indexOf('-') !== -1;\n        var hasUnder = value.indexOf('_') !== -1;\n\n        if (hasMinus || hasUnder) {\n          var invalidChar = hasMinus ? '-' : '_';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64url encoded?\");\n        }\n\n        break;\n      }\n\n    case StringFormat.BASE64URL:\n      {\n        var hasPlus = value.indexOf('+') !== -1;\n        var hasSlash = value.indexOf('/') !== -1;\n\n        if (hasPlus || hasSlash) {\n          var invalidChar = hasPlus ? '+' : '/';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\n        }\n\n        value = value.replace(/-/g, '+').replace(/_/g, '/');\n        break;\n      }\n    // do nothing\n  }\n\n  var bytes;\n\n  try {\n    bytes = atob(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n\n  var array = new Uint8Array(bytes.length);\n\n  for (var i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar DataURLParts =\n/** @class */\nfunction () {\n  function DataURLParts(dataURL) {\n    this.base64 = false;\n    this.contentType = null;\n    var matches = dataURL.match(/^data:([^,]+)?,/);\n\n    if (matches === null) {\n      throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\n    }\n\n    var middle = matches[1] || null;\n\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;\n    }\n\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n\n  return DataURLParts;\n}();\n\nfunction dataURLBytes_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nfunction dataURLContentType_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s, end) {\n  var longEnough = s.length >= end.length;\n\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * An event that is triggered on a task.\r\n */\n\n\nvar TaskEvent = {\n  /**\r\n   * For this event,\r\n   * <ul>\r\n   *   <li>The `next` function is triggered on progress updates and when the\r\n   *       task is paused/resumed with an `UploadTaskSnapshot` as the first\r\n   *       argument.</li>\r\n   *   <li>The `error` function is triggered if the upload is canceled or fails\r\n   *       for another reason.</li>\r\n   *   <li>The `complete` function is triggered if the upload completes\r\n   *       successfully.</li>\r\n   * </ul>\r\n   */\n  STATE_CHANGED: 'state_changed'\n};\n/**\r\n * Represents the current state of a running upload.\r\n */\n\nvar TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\n\nfunction taskStateFromInternalTaskState(state) {\n  switch (state) {\n    case \"running\"\n    /* RUNNING */\n    :\n    case \"pausing\"\n    /* PAUSING */\n    :\n    case \"canceling\"\n    /* CANCELING */\n    :\n      return TaskState.RUNNING;\n\n    case \"paused\"\n    /* PAUSED */\n    :\n      return TaskState.PAUSED;\n\n    case \"success\"\n    /* SUCCESS */\n    :\n      return TaskState.SUCCESS;\n\n    case \"canceled\"\n    /* CANCELED */\n    :\n      return TaskState.CANCELED;\n\n    case \"error\"\n    /* ERROR */\n    :\n      return TaskState.ERROR;\n\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Error codes for requests made by the the XhrIo wrapper.\r\n */\n\n\nvar ErrorCode;\n\n(function (ErrorCode) {\n  ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n  ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\n  ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\n})(ErrorCode || (ErrorCode = {}));\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * We use this instead of goog.net.XhrIo because goog.net.XhrIo is hyuuuuge and\r\n * doesn't work in React Native on Android.\r\n */\n\n\nvar NetworkXhrIo =\n/** @class */\nfunction () {\n  function NetworkXhrIo() {\n    var _this = this;\n\n    this.sent_ = false;\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(function (resolve) {\n      _this.xhr_.addEventListener('abort', function () {\n        _this.errorCode_ = ErrorCode.ABORT;\n        resolve(_this);\n      });\n\n      _this.xhr_.addEventListener('error', function () {\n        _this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve(_this);\n      });\n\n      _this.xhr_.addEventListener('load', function () {\n        resolve(_this);\n      });\n    });\n  }\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.send = function (url, method, body, headers) {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n\n    if (headers !== undefined) {\n      for (var key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n\n    if (body !== undefined) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n\n    return this.sendPromise_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getErrorCode = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n\n    return this.errorCode_;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getStatus = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseText = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponseText() before sending');\n    }\n\n    return this.xhr_.responseText;\n  };\n  /**\r\n   * Aborts the request.\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.abort = function () {\n    this.xhr_.abort();\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.getResponseHeader = function (header) {\n    return this.xhr_.getResponseHeader(header);\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.addUploadProgressListener = function (listener) {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  NetworkXhrIo.prototype.removeUploadProgressListener = function (listener) {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  };\n\n  return NetworkXhrIo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\n\n\nvar XhrIoPool =\n/** @class */\nfunction () {\n  function XhrIoPool() {}\n\n  XhrIoPool.prototype.createXhrIo = function () {\n    return new NetworkXhrIo();\n  };\n\n  return XhrIoPool;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Firebase Storage location data.\r\n *\r\n * @internal\r\n */\n\n\nvar Location =\n/** @class */\nfunction () {\n  function Location(bucket, path) {\n    this.bucket = bucket;\n    this.path_ = path;\n  }\n\n  Object.defineProperty(Location.prototype, \"path\", {\n    get: function get() {\n      return this.path_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Location.prototype, \"isRoot\", {\n    get: function get() {\n      return this.path.length === 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Location.prototype.fullServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  };\n\n  Location.prototype.bucketOnlyServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  };\n\n  Location.makeFromBucketSpec = function (bucketString) {\n    var bucketLocation;\n\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  };\n\n  Location.makeFromUrl = function (url) {\n    var location = null;\n    var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n\n    var gsPath = '(/(.*))?$';\n    var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    var gsIndices = {\n      bucket: 1,\n      path: 3\n    };\n\n    function httpModify(loc) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n\n    var version = 'v[A-Za-z0-9_]+';\n    var firebaseStorageHost = DEFAULT_HOST.replace(/[.]/g, '\\\\.');\n    var firebaseStoragePath = '(/([^?#]*).*)?$';\n    var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\n    var firebaseStorageIndices = {\n      bucket: 1,\n      path: 3\n    };\n    var cloudStorageHost = '(?:storage.googleapis.com|storage.cloud.google.com)';\n    var cloudStoragePath = '([^?#]*)';\n    var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\n    var cloudStorageIndices = {\n      bucket: 1,\n      path: 2\n    };\n    var groups = [{\n      regex: gsRegex,\n      indices: gsIndices,\n      postModify: gsModify\n    }, {\n      regex: firebaseStorageRegExp,\n      indices: firebaseStorageIndices,\n      postModify: httpModify\n    }, {\n      regex: cloudStorageRegExp,\n      indices: cloudStorageIndices,\n      postModify: httpModify\n    }];\n\n    for (var i = 0; i < groups.length; i++) {\n      var group = groups[i];\n      var captures = group.regex.exec(url);\n\n      if (captures) {\n        var bucketValue = captures[group.indices.bucket];\n        var pathValue = captures[group.indices.path];\n\n        if (!pathValue) {\n          pathValue = '';\n        }\n\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n\n    return location;\n  };\n\n  return Location;\n}();\n/**\r\n * A request whose promise always fails.\r\n */\n\n\nvar FailRequest =\n/** @class */\nfunction () {\n  function FailRequest(error) {\n    this.promise_ = Promise.reject(error);\n  }\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  FailRequest.prototype.cancel = function (_appDelete) {};\n\n  return FailRequest;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\n\n\nfunction start(f, // eslint-disable-next-line @typescript-eslint/no-explicit-any\ncallback, timeout) {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  var waitSeconds = 1; // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  var timeoutId = null;\n  var hitTimeout = false;\n  var cancelState = 0;\n\n  function canceled() {\n    return cancelState === 2;\n  }\n\n  var triggeredCallback = false;\n\n  function triggerCallback() {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis) {\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  function handler(success) {\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (success) {\n      triggerCallback.call.apply(triggerCallback, __spreadArray([null, success], args));\n      return;\n    }\n\n    var mustStop = canceled() || hitTimeout;\n\n    if (mustStop) {\n      triggerCallback.call.apply(triggerCallback, __spreadArray([null, success], args));\n      return;\n    }\n\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n\n    var waitMillis;\n\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n\n    callWithDelay(waitMillis);\n  }\n\n  var stopped = false;\n\n  function stop(wasTimeout) {\n    if (stopped) {\n      return;\n    }\n\n    stopped = true;\n\n    if (triggeredCallback) {\n      return;\n    }\n\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n\n  callWithDelay(0);\n  setTimeout(function () {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\n\n\nfunction stop(id) {\n  id(false);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isJustDef(p) {\n  return p !== void 0;\n} // eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction isFunction(p) {\n  return typeof p === 'function';\n}\n\nfunction isNonArrayObject(p) {\n  return typeof p === 'object' && !Array.isArray(p);\n}\n\nfunction isString(p) {\n  return typeof p === 'string' || p instanceof String;\n}\n\nfunction isNativeBlob(p) {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nfunction isNativeBlobDefined() {\n  return typeof Blob !== 'undefined';\n}\n\nfunction validateNumber(argument, minValue, maxValue, value) {\n  if (value < minValue) {\n    throw invalidArgument(\"Invalid value for '\" + argument + \"'. Expected \" + minValue + \" or greater.\");\n  }\n\n  if (value > maxValue) {\n    throw invalidArgument(\"Invalid value for '\" + argument + \"'. Expected \" + maxValue + \" or less.\");\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction makeUrl(urlPart) {\n  return \"https://\" + DEFAULT_HOST + \"/v0\" + urlPart;\n}\n\nfunction makeQueryString(params) {\n  var encode = encodeURIComponent;\n  var queryPart = '?';\n\n  for (var key in params) {\n    if (params.hasOwnProperty(key)) {\n      var nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  } // Chop off the extra '&' or '?' on the end\n\n\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar NetworkRequest =\n/** @class */\nfunction () {\n  function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\n    var _this = this;\n\n    this.pendingXhr_ = null;\n    this.backoffId_ = null;\n    this.canceled_ = false;\n    this.appDelete_ = false;\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n\n      _this.start_();\n    });\n  }\n  /**\r\n   * Actually starts the retry loop.\r\n   */\n\n\n  NetworkRequest.prototype.start_ = function () {\n    var self = this;\n\n    function doTheRequest(backoffCallback, canceled) {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n\n      var xhr = self.pool_.createXhrIo();\n      self.pendingXhr_ = xhr;\n\n      function progressListener(progressEvent) {\n        var loaded = progressEvent.loaded;\n        var total = progressEvent.lengthComputable ? progressEvent.total : -1;\n\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n\n      if (self.progressCallback_ !== null) {\n        xhr.addUploadProgressListener(progressListener);\n      } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n      xhr.send(self.url_, self.method_, self.body_, self.headers_).then(function (xhr) {\n        if (self.progressCallback_ !== null) {\n          xhr.removeUploadProgressListener(progressListener);\n        }\n\n        self.pendingXhr_ = null;\n        xhr = xhr;\n        var hitServer = xhr.getErrorCode() === ErrorCode.NO_ERROR;\n        var status = xhr.getStatus();\n\n        if (!hitServer || self.isRetryStatusCode_(status)) {\n          var wasCanceled = xhr.getErrorCode() === ErrorCode.ABORT;\n          backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\n          return;\n        }\n\n        var successCode = self.successCodes_.indexOf(status) !== -1;\n        backoffCallback(true, new RequestEndStatus(successCode, xhr));\n      });\n    }\n    /**\r\n     * @param requestWentThrough - True if the request eventually went\r\n     *     through, false if it hit the retry limit or was canceled.\r\n     */\n\n\n    function backoffDone(requestWentThrough, status) {\n      var resolve = self.resolve_;\n      var reject = self.reject_;\n      var xhr = status.xhr;\n\n      if (status.wasSuccessCode) {\n        try {\n          var result = self.callback_(xhr, xhr.getResponseText());\n\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (xhr !== null) {\n          var err = unknown();\n          err.serverResponse = xhr.getResponseText();\n\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(xhr, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            var err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            var err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n\n\n  NetworkRequest.prototype.cancel = function (appDelete) {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n\n    if (this.pendingXhr_ !== null) {\n      this.pendingXhr_.abort();\n    }\n  };\n\n  NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    var isFiveHundredCode = status >= 500 && status < 600;\n    var extraRetryCodes = [// Request Timeout: web server didn't receive full request in time.\n    408, // Too Many Requests: you're getting rate-limited, basically.\n    429];\n    var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  };\n\n  return NetworkRequest;\n}();\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */\n\n\nvar RequestEndStatus =\n/** @class */\nfunction () {\n  function RequestEndStatus(wasSuccessCode, xhr, canceled) {\n    this.wasSuccessCode = wasSuccessCode;\n    this.xhr = xhr;\n    this.canceled = !!canceled;\n  }\n\n  return RequestEndStatus;\n}();\n\nfunction addAuthHeader_(headers, authToken) {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nfunction addVersionHeader_(headers, firebaseVersion) {\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + (firebaseVersion !== null && firebaseVersion !== void 0 ? firebaseVersion : 'AppManager');\n}\n\nfunction addGmpidHeader_(headers, appId) {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\nfunction makeRequest(requestInfo, appId, authToken, pool, firebaseVersion) {\n  var queryPart = makeQueryString(requestInfo.urlParams);\n  var url = requestInfo.url + queryPart;\n  var headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers, firebaseVersion);\n  return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction getBlobBuilder() {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\n\n\nfunction getBlob() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var BlobBuilder = getBlobBuilder();\n\n  if (BlobBuilder !== undefined) {\n    var bb = new BlobBuilder();\n\n    for (var i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw new FirebaseStorageError(\"unsupported-environment\"\n      /* UNSUPPORTED_ENVIRONMENT */\n      , \"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\n\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n\n  return null;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n *\r\n * @internal\r\n */\n\n\nvar FbsBlob =\n/** @class */\nfunction () {\n  function FbsBlob(data, elideCopy) {\n    var size = 0;\n    var blobType = '';\n\n    if (isNativeBlob(data)) {\n      this.data_ = data;\n      size = data.size;\n      blobType = data.type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data);\n      }\n\n      size = data.length;\n    }\n\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  FbsBlob.prototype.size = function () {\n    return this.size_;\n  };\n\n  FbsBlob.prototype.type = function () {\n    return this.type_;\n  };\n\n  FbsBlob.prototype.slice = function (startByte, endByte) {\n    if (isNativeBlob(this.data_)) {\n      var realBlob = this.data_;\n      var sliced = sliceBlob(realBlob, startByte, endByte);\n\n      if (sliced === null) {\n        return null;\n      }\n\n      return new FbsBlob(sliced);\n    } else {\n      var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\n      return new FbsBlob(slice, true);\n    }\n  };\n\n  FbsBlob.getBlob = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (isNativeBlobDefined()) {\n      var blobby = args.map(function (val) {\n        if (val instanceof FbsBlob) {\n          return val.data_;\n        } else {\n          return val;\n        }\n      });\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      var uint8Arrays = args.map(function (val) {\n        if (isString(val)) {\n          return dataFromString(StringFormat.RAW, val).data;\n        } else {\n          // Blobs don't exist, so this has to be a Uint8Array.\n          return val.data_;\n        }\n      });\n      var finalLength_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        finalLength_1 += array.byteLength;\n      });\n      var merged_1 = new Uint8Array(finalLength_1);\n      var index_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        for (var i = 0; i < array.length; i++) {\n          merged_1[index_1++] = array[i];\n        }\n      });\n      return new FbsBlob(merged_1, true);\n    }\n  };\n\n  FbsBlob.prototype.uploadData = function () {\n    return this.data_;\n  };\n\n  return FbsBlob;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\n\n\nfunction jsonObjectOrNull(s) {\n  var obj;\n\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\n\n/**\r\n * @return Null if the path is already at the root.\r\n */\n\n\nfunction parent(path) {\n  if (path.length === 0) {\n    return null;\n  }\n\n  var index = path.lastIndexOf('/');\n\n  if (index === -1) {\n    return '';\n  }\n\n  var newPath = path.slice(0, index);\n  return newPath;\n}\n\nfunction child(path, childPath) {\n  var canonicalChildPath = childPath.split('/').filter(function (component) {\n    return component.length > 0;\n  }).join('/');\n\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\n\n\nfunction lastComponent(path) {\n  var index = path.lastIndexOf('/', path.length - 2);\n\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction noXform_(metadata, value) {\n  return value;\n}\n\nvar Mapping =\n/** @class */\nfunction () {\n  function Mapping(server, local, writable, xform) {\n    this.server = server;\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n\n  return Mapping;\n}();\n\nvar mappings_ = null;\n\nfunction xformPath(fullPath) {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nfunction getMappings() {\n  if (mappings_) {\n    return mappings_;\n  }\n\n  var mappings = [];\n  mappings.push(new Mapping('bucket'));\n  mappings.push(new Mapping('generation'));\n  mappings.push(new Mapping('metageneration'));\n  mappings.push(new Mapping('name', 'fullPath', true));\n\n  function mappingsXformPath(_metadata, fullPath) {\n    return xformPath(fullPath);\n  }\n\n  var nameMapping = new Mapping('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n  /**\r\n   * Coerces the second param to a number, if it is defined.\r\n   */\n\n  function xformSize(_metadata, size) {\n    if (size !== undefined) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n\n  var sizeMapping = new Mapping('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping('timeCreated'));\n  mappings.push(new Mapping('updated'));\n  mappings.push(new Mapping('md5Hash', null, true));\n  mappings.push(new Mapping('cacheControl', null, true));\n  mappings.push(new Mapping('contentDisposition', null, true));\n  mappings.push(new Mapping('contentEncoding', null, true));\n  mappings.push(new Mapping('contentLanguage', null, true));\n  mappings.push(new Mapping('contentType', null, true));\n  mappings.push(new Mapping('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nfunction addRef(metadata, service) {\n  function generateRef() {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var loc = new Location(bucket, path);\n    return service._makeStorageReference(loc);\n  }\n\n  Object.defineProperty(metadata, 'ref', {\n    get: generateRef\n  });\n}\n\nfunction fromResource(service, resource, mappings) {\n  var metadata = {};\n  metadata['type'] = 'file';\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n  }\n\n  addRef(metadata, service);\n  return metadata;\n}\n\nfunction fromResourceString(service, resourceString, mappings) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromResource(service, resource, mappings);\n}\n\nfunction downloadUrlFromResourceString(metadata, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n\n  var tokens = obj['downloadTokens'];\n\n  if (tokens.length === 0) {\n    return null;\n  }\n\n  var encode = encodeURIComponent;\n  var tokensList = tokens.split(',');\n  var urls = tokensList.map(function (token) {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    var base = makeUrl(urlPart);\n    var queryString = makeQueryString({\n      alt: 'media',\n      token: token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nfunction toResourceString(metadata, mappings) {\n  var resource = {};\n  var len = mappings.length;\n\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n\n  return JSON.stringify(resource);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PREFIXES_KEY = 'prefixes';\nvar ITEMS_KEY = 'items';\n\nfunction fromBackendResponse(service, bucket, resource) {\n  var listResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n\n  if (resource[PREFIXES_KEY]) {\n    for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\n      var path = _a[_i];\n      var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n\n      var reference = service._makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\n\n      listResult.prefixes.push(reference);\n    }\n  }\n\n  if (resource[ITEMS_KEY]) {\n    for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\n      var item = _c[_b];\n\n      var reference = service._makeStorageReference(new Location(bucket, item['name']));\n\n      listResult.items.push(reference);\n    }\n  }\n\n  return listResult;\n}\n\nfunction fromResponseString(service, bucket, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n\n  if (obj === null) {\n    return null;\n  }\n\n  var resource = obj;\n  return fromBackendResponse(service, bucket, resource);\n}\n\nvar RequestInfo =\n/** @class */\nfunction () {\n  function RequestInfo(url, method,\n  /**\r\n   * Returns the value with which to resolve the request's promise. Only called\r\n   * if the request is successful. Throw from this function to reject the\r\n   * returned Request's promise with the thrown error.\r\n   * Note: The XhrIo passed to this function may be reused after this callback\r\n   * returns. Do not keep a reference to it in any way.\r\n   */\n  handler, timeout) {\n    this.url = url;\n    this.method = method;\n    this.handler = handler;\n    this.timeout = timeout;\n    this.urlParams = {};\n    this.headers = {};\n    this.body = null;\n    this.errorHandler = null;\n    /**\r\n     * Called with the current number of bytes uploaded and total size (-1 if not\r\n     * computable) of the request body (i.e. used to report upload progress).\r\n     */\n\n    this.progressCallback = null;\n    this.successCodes = [200];\n    this.additionalRetryCodes = [];\n  }\n\n  return RequestInfo;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\n\n\nfunction handlerCheck(cndn) {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nfunction metadataHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata;\n  }\n\n  return handler;\n}\n\nfunction listHandler(service, bucket) {\n  function handler(xhr, text) {\n    var listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult;\n  }\n\n  return handler;\n}\n\nfunction downloadUrlHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(metadata, text);\n  }\n\n  return handler;\n}\n\nfunction sharedErrorHandler(location) {\n  function errorHandler(xhr, err) {\n    var newErr;\n\n    if (xhr.getStatus() === 401) {\n      newErr = unauthenticated();\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction objectErrorHandler(location) {\n  var shared = sharedErrorHandler(location);\n\n  function errorHandler(xhr, err) {\n    var newErr = shared(xhr, err);\n\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n\n  return errorHandler;\n}\n\nfunction getMetadata(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction list(service, location, delimiter, pageToken, maxResults) {\n  var urlParams = {};\n\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n\n  var urlPart = location.bucketOnlyServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nfunction getDownloadUrl(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction updateMetadata(service, location, metadata, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'PATCH';\n  var body = toResourceString(metadata, mappings);\n  var headers = {\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction deleteObject(service, location) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart);\n  var method = 'DELETE';\n  var timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr, _text) {}\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nfunction determineContentType_(metadata, blob) {\n  return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';\n}\n\nfunction metadataForUpload_(location, blob, metadata) {\n  var metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n\n  return metadataClone;\n}\n/**\r\n * Prepare RequestInfo for uploads as Content-Type: multipart.\r\n */\n\n\nfunction multipartUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var headers = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary() {\n    var str = '';\n\n    for (var i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n\n    return str;\n  }\n\n  var boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  var metadata_ = metadataForUpload_(location, blob, metadata);\n  var metadataString = toResourceString(metadata_, mappings);\n  var preBlobPart = '--' + boundary + '\\r\\n' + 'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' + metadataString + '\\r\\n--' + boundary + '\\r\\n' + 'Content-Type: ' + metadata_['contentType'] + '\\r\\n\\r\\n';\n  var postBlobPart = '\\r\\n--' + boundary + '--';\n  var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  var urlParams = {\n    name: metadata_['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */\n\n\nvar ResumableUploadStatus =\n/** @class */\nfunction () {\n  function ResumableUploadStatus(current, total, finalized, metadata) {\n    this.current = current;\n    this.total = total;\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n\n  return ResumableUploadStatus;\n}();\n\nfunction checkResumeHeader_(xhr, allowed) {\n  var status = null;\n\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n\n  var allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status;\n}\n\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var metadataForUpload = metadataForUpload_(location, blob, metadata);\n  var urlParams = {\n    name: metadataForUpload['fullPath']\n  };\n  var url = makeUrl(urlPart);\n  var method = 'POST';\n  var headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var body = toResourceString(metadataForUpload, mappings);\n  var timeout = service.maxUploadRetryTime;\n\n  function handler(xhr) {\n    checkResumeHeader_(xhr);\n    var url;\n\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    handlerCheck(isString(url));\n    return url;\n  }\n\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\n\n\nfunction getResumableUploadStatus(service, location, url, blob) {\n  var headers = {\n    'X-Goog-Upload-Command': 'query'\n  };\n\n  function handler(xhr) {\n    var status = checkResumeHeader_(xhr, ['active', 'final']);\n    var sizeString = null;\n\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    var size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\n\n\nvar RESUMABLE_UPLOAD_CHUNK_SIZE = 256 * 1024;\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\n\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  var status_ = new ResumableUploadStatus(0, 0);\n\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n\n  var bytesLeft = status_.total - status_.current;\n  var bytesToUpload = bytesLeft;\n\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n\n  var startByte = status_.current;\n  var endByte = startByte + bytesToUpload;\n  var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  var headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': status_.current\n  };\n  var body = blob.slice(startByte, endByte);\n\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr, text) {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    var newCurrent = status_.current + bytesToUpload;\n    var size = blob.size();\n    var metadata;\n\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n\n    return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\n  }\n\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Observer =\n/** @class */\nfunction () {\n  function Observer(nextOrObserver, error, complete) {\n    var asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\n\n    if (asFunctions) {\n      this.next = nextOrObserver;\n      this.error = error;\n      this.complete = complete;\n    } else {\n      var observer = nextOrObserver;\n      this.next = observer.next;\n      this.error = observer.error;\n      this.complete = observer.complete;\n    }\n  }\n\n  return Observer;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n\nfunction async(f) {\n  return function () {\n    var argsToForward = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      argsToForward[_i] = arguments[_i];\n    } // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    Promise.resolve().then(function () {\n      return f.apply(void 0, argsToForward);\n    });\n  };\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n * @internal\r\n */\n\n\nvar UploadTask =\n/** @class */\nfunction () {\n  /**\r\n   * @param ref - The firebaseStorage.Reference object this task came\r\n   *     from, untyped to avoid cyclic dependencies.\r\n   * @param blob - The blob to upload.\r\n   */\n  function UploadTask(ref, blob, metadata) {\n    var _this = this;\n\n    if (metadata === void 0) {\n      metadata = null;\n    }\n    /**\r\n     * Number of bytes transferred so far.\r\n     */\n\n\n    this._transferred = 0;\n    this._needToFetchStatus = false;\n    this._needToFetchMetadata = false;\n    this._observers = [];\n    this._error = undefined;\n    this._uploadUrl = undefined;\n    this._request = undefined;\n    this._chunkMultiplier = 1;\n    this._resolve = undefined;\n    this._reject = undefined;\n    this._ref = ref;\n    this._blob = blob;\n    this._metadata = metadata;\n    this._mappings = getMappings();\n    this._resumable = this._shouldDoResumable(this._blob);\n    this._state = \"running\"\n    /* RUNNING */\n    ;\n\n    this._errorHandler = function (error) {\n      _this._request = undefined;\n      _this._chunkMultiplier = 1;\n\n      if (error._codeEquals(\"canceled\"\n      /* CANCELED */\n      )) {\n        _this._needToFetchStatus = true;\n\n        _this.completeTransitions_();\n      } else {\n        _this._error = error;\n\n        _this._transition(\"error\"\n        /* ERROR */\n        );\n      }\n    };\n\n    this._metadataErrorHandler = function (error) {\n      _this._request = undefined;\n\n      if (error._codeEquals(\"canceled\"\n      /* CANCELED */\n      )) {\n        _this.completeTransitions_();\n      } else {\n        _this._error = error;\n\n        _this._transition(\"error\"\n        /* ERROR */\n        );\n      }\n    };\n\n    this._promise = new Promise(function (resolve, reject) {\n      _this._resolve = resolve;\n      _this._reject = reject;\n\n      _this._start();\n    }); // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n\n    this._promise.then(null, function () {});\n  }\n\n  UploadTask.prototype._makeProgressCallback = function () {\n    var _this = this;\n\n    var sizeBefore = this._transferred;\n    return function (loaded) {\n      return _this._updateProgress(sizeBefore + loaded);\n    };\n  };\n\n  UploadTask.prototype._shouldDoResumable = function (blob) {\n    return blob.size() > 256 * 1024;\n  };\n\n  UploadTask.prototype._start = function () {\n    if (this._state !== \"running\"\n    /* RUNNING */\n    ) {\n        // This can happen if someone pauses us in a resume callback, for example.\n        return;\n      }\n\n    if (this._request !== undefined) {\n      return;\n    }\n\n    if (this._resumable) {\n      if (this._uploadUrl === undefined) {\n        this._createResumable();\n      } else {\n        if (this._needToFetchStatus) {\n          this._fetchStatus();\n        } else {\n          if (this._needToFetchMetadata) {\n            // Happens if we miss the metadata on upload completion.\n            this._fetchMetadata();\n          } else {\n            this._continueUpload();\n          }\n        }\n      }\n    } else {\n      this._oneShotUpload();\n    }\n  };\n\n  UploadTask.prototype._resolveToken = function (callback) {\n    var _this = this; // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n\n    this._ref.storage._getAuthToken().then(function (authToken) {\n      switch (_this._state) {\n        case \"running\"\n        /* RUNNING */\n        :\n          callback(authToken);\n          break;\n\n        case \"canceling\"\n        /* CANCELING */\n        :\n          _this._transition(\"canceled\"\n          /* CANCELED */\n          );\n\n          break;\n\n        case \"pausing\"\n        /* PAUSING */\n        :\n          _this._transition(\"paused\"\n          /* PAUSED */\n          );\n\n          break;\n      }\n    });\n  }; // TODO(andysoto): assert false\n\n\n  UploadTask.prototype._createResumable = function () {\n    var _this = this;\n\n    this._resolveToken(function (authToken) {\n      var requestInfo = createResumableUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\n\n      var createRequest = _this._ref.storage._makeRequest(requestInfo, authToken);\n\n      _this._request = createRequest;\n      createRequest.getPromise().then(function (url) {\n        _this._request = undefined;\n        _this._uploadUrl = url;\n        _this._needToFetchStatus = false;\n\n        _this.completeTransitions_();\n      }, _this._errorHandler);\n    });\n  };\n\n  UploadTask.prototype._fetchStatus = function () {\n    var _this = this; // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n\n    var url = this._uploadUrl;\n\n    this._resolveToken(function (authToken) {\n      var requestInfo = getResumableUploadStatus(_this._ref.storage, _this._ref._location, url, _this._blob);\n\n      var statusRequest = _this._ref.storage._makeRequest(requestInfo, authToken);\n\n      _this._request = statusRequest;\n      statusRequest.getPromise().then(function (status) {\n        status = status;\n        _this._request = undefined;\n\n        _this._updateProgress(status.current);\n\n        _this._needToFetchStatus = false;\n\n        if (status.finalized) {\n          _this._needToFetchMetadata = true;\n        }\n\n        _this.completeTransitions_();\n      }, _this._errorHandler);\n    });\n  };\n\n  UploadTask.prototype._continueUpload = function () {\n    var _this = this;\n\n    var chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n    var status = new ResumableUploadStatus(this._transferred, this._blob.size()); // TODO(andysoto): assert(this.uploadUrl_ !== null);\n\n    var url = this._uploadUrl;\n\n    this._resolveToken(function (authToken) {\n      var requestInfo;\n\n      try {\n        requestInfo = continueResumableUpload(_this._ref._location, _this._ref.storage, url, _this._blob, chunkSize, _this._mappings, status, _this._makeProgressCallback());\n      } catch (e) {\n        _this._error = e;\n\n        _this._transition(\"error\"\n        /* ERROR */\n        );\n\n        return;\n      }\n\n      var uploadRequest = _this._ref.storage._makeRequest(requestInfo, authToken);\n\n      _this._request = uploadRequest;\n      uploadRequest.getPromise().then(function (newStatus) {\n        _this._increaseMultiplier();\n\n        _this._request = undefined;\n\n        _this._updateProgress(newStatus.current);\n\n        if (newStatus.finalized) {\n          _this._metadata = newStatus.metadata;\n\n          _this._transition(\"success\"\n          /* SUCCESS */\n          );\n        } else {\n          _this.completeTransitions_();\n        }\n      }, _this._errorHandler);\n    });\n  };\n\n  UploadTask.prototype._increaseMultiplier = function () {\n    var currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier; // Max chunk size is 32M.\n\n    if (currentSize < 32 * 1024 * 1024) {\n      this._chunkMultiplier *= 2;\n    }\n  };\n\n  UploadTask.prototype._fetchMetadata = function () {\n    var _this = this;\n\n    this._resolveToken(function (authToken) {\n      var requestInfo = getMetadata(_this._ref.storage, _this._ref._location, _this._mappings);\n\n      var metadataRequest = _this._ref.storage._makeRequest(requestInfo, authToken);\n\n      _this._request = metadataRequest;\n      metadataRequest.getPromise().then(function (metadata) {\n        _this._request = undefined;\n        _this._metadata = metadata;\n\n        _this._transition(\"success\"\n        /* SUCCESS */\n        );\n      }, _this._metadataErrorHandler);\n    });\n  };\n\n  UploadTask.prototype._oneShotUpload = function () {\n    var _this = this;\n\n    this._resolveToken(function (authToken) {\n      var requestInfo = multipartUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\n\n      var multipartRequest = _this._ref.storage._makeRequest(requestInfo, authToken);\n\n      _this._request = multipartRequest;\n      multipartRequest.getPromise().then(function (metadata) {\n        _this._request = undefined;\n        _this._metadata = metadata;\n\n        _this._updateProgress(_this._blob.size());\n\n        _this._transition(\"success\"\n        /* SUCCESS */\n        );\n      }, _this._errorHandler);\n    });\n  };\n\n  UploadTask.prototype._updateProgress = function (transferred) {\n    var old = this._transferred;\n    this._transferred = transferred; // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n\n    if (this._transferred !== old) {\n      this._notifyObservers();\n    }\n  };\n\n  UploadTask.prototype._transition = function (state) {\n    if (this._state === state) {\n      return;\n    }\n\n    switch (state) {\n      case \"canceling\"\n      /* CANCELING */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n\n        break;\n\n      case \"pausing\"\n      /* PAUSING */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this._state = state;\n\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n\n        break;\n\n      case \"running\"\n      /* RUNNING */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        var wasPaused = this._state === \"paused\"\n        /* PAUSED */\n        ;\n        this._state = state;\n\n        if (wasPaused) {\n          this._notifyObservers();\n\n          this._start();\n        }\n\n        break;\n\n      case \"paused\"\n      /* PAUSED */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n\n      case \"canceled\"\n      /* CANCELED */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._error = canceled();\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n\n      case \"error\"\n      /* ERROR */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n\n      case \"success\"\n      /* SUCCESS */\n      :\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n\n        this._notifyObservers();\n\n        break;\n    }\n  };\n\n  UploadTask.prototype.completeTransitions_ = function () {\n    switch (this._state) {\n      case \"pausing\"\n      /* PAUSING */\n      :\n        this._transition(\"paused\"\n        /* PAUSED */\n        );\n\n        break;\n\n      case \"canceling\"\n      /* CANCELING */\n      :\n        this._transition(\"canceled\"\n        /* CANCELED */\n        );\n\n        break;\n\n      case \"running\"\n      /* RUNNING */\n      :\n        this._start();\n\n        break;\n    }\n  };\n\n  Object.defineProperty(UploadTask.prototype, \"snapshot\", {\n    /**\r\n     * A snapshot of the current task state.\r\n     */\n    get: function get() {\n      var externalState = taskStateFromInternalTaskState(this._state);\n      return {\n        bytesTransferred: this._transferred,\n        totalBytes: this._blob.size(),\n        state: externalState,\n        metadata: this._metadata,\n        task: this,\n        ref: this._ref\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Adds a callback for an event.\r\n   * @param type - The type of event to listen for.\r\n   * @param nextOrObserver -\r\n   *     The `next` function, which gets called for each item in\r\n   *     the event stream, or an observer object with some or all of these three\r\n   *     properties (`next`, `error`, `complete`).\r\n   * @param error - A function that gets called with a `FirebaseStorageError`\r\n   *     if the event stream ends due to an error.\r\n   * @param completed - A function that gets called if the\r\n   *     event stream ends normally.\r\n   * @returns\r\n   *     If only the event argument is passed, returns a function you can use to\r\n   *     add callbacks (see the examples above). If more than just the event\r\n   *     argument is passed, returns a function you can call to unregister the\r\n   *     callbacks.\r\n   */\n\n  UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\n    var _this = this;\n\n    var observer = new Observer(nextOrObserver, error, completed);\n\n    this._addObserver(observer);\n\n    return function () {\n      _this._removeObserver(observer);\n    };\n  };\n  /**\r\n   * This object behaves like a Promise, and resolves with its snapshot data\r\n   * when the upload completes.\r\n   * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n   * @param onRejected - The rejection callback.\r\n   */\n\n\n  UploadTask.prototype.then = function (onFulfilled, onRejected) {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this._promise.then(onFulfilled, onRejected);\n  };\n  /**\r\n   * Equivalent to calling `then(null, onRejected)`.\r\n   */\n\n\n  UploadTask.prototype.catch = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n  /**\r\n   * Adds the given observer.\r\n   */\n\n\n  UploadTask.prototype._addObserver = function (observer) {\n    this._observers.push(observer);\n\n    this._notifyObserver(observer);\n  };\n  /**\r\n   * Removes the given observer.\r\n   */\n\n\n  UploadTask.prototype._removeObserver = function (observer) {\n    var i = this._observers.indexOf(observer);\n\n    if (i !== -1) {\n      this._observers.splice(i, 1);\n    }\n  };\n\n  UploadTask.prototype._notifyObservers = function () {\n    var _this = this;\n\n    this._finishPromise();\n\n    var observers = this._observers.slice();\n\n    observers.forEach(function (observer) {\n      _this._notifyObserver(observer);\n    });\n  };\n\n  UploadTask.prototype._finishPromise = function () {\n    if (this._resolve !== undefined) {\n      var triggered = true;\n\n      switch (taskStateFromInternalTaskState(this._state)) {\n        case TaskState.SUCCESS:\n          async(this._resolve.bind(null, this.snapshot))();\n          break;\n\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          var toCall = this._reject;\n          async(toCall.bind(null, this._error))();\n          break;\n\n        default:\n          triggered = false;\n          break;\n      }\n\n      if (triggered) {\n        this._resolve = undefined;\n        this._reject = undefined;\n      }\n    }\n  };\n\n  UploadTask.prototype._notifyObserver = function (observer) {\n    var externalState = taskStateFromInternalTaskState(this._state);\n\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          async(observer.next.bind(observer, this.snapshot))();\n        }\n\n        break;\n\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          async(observer.complete.bind(observer))();\n        }\n\n        break;\n\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          async(observer.error.bind(observer, this._error))();\n        }\n\n        break;\n\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          async(observer.error.bind(observer, this._error))();\n        }\n\n    }\n  };\n  /**\r\n   * Resumes a paused task. Has no effect on a currently running or failed task.\r\n   * @returns True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.resume = function () {\n    var valid = this._state === \"paused\"\n    /* PAUSED */\n    || this._state === \"pausing\"\n    /* PAUSING */\n    ;\n\n    if (valid) {\n      this._transition(\"running\"\n      /* RUNNING */\n      );\n    }\n\n    return valid;\n  };\n  /**\r\n   * Pauses a currently running task. Has no effect on a paused or failed task.\r\n   * @returns True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.pause = function () {\n    var valid = this._state === \"running\"\n    /* RUNNING */\n    ;\n\n    if (valid) {\n      this._transition(\"pausing\"\n      /* PAUSING */\n      );\n    }\n\n    return valid;\n  };\n  /**\r\n   * Cancels a currently running or paused task. Has no effect on a complete or\r\n   * failed task.\r\n   * @returns True if the operation took effect, false if ignored.\r\n   */\n\n\n  UploadTask.prototype.cancel = function () {\n    var valid = this._state === \"running\"\n    /* RUNNING */\n    || this._state === \"pausing\"\n    /* PAUSING */\n    ;\n\n    if (valid) {\n      this._transition(\"canceling\"\n      /* CANCELING */\n      );\n    }\n\n    return valid;\n  };\n\n  return UploadTask;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @internal\r\n * @param _location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\n\n\nvar Reference =\n/** @class */\nfunction () {\n  function Reference(_service, location) {\n    this._service = _service;\n\n    if (location instanceof Location) {\n      this._location = location;\n    } else {\n      this._location = Location.makeFromUrl(location);\n    }\n  }\n  /**\r\n   * Returns the URL for the bucket and path this object references,\r\n   *     in the form gs://<bucket>/<object-path>\r\n   * @override\r\n   */\n\n\n  Reference.prototype.toString = function () {\n    return 'gs://' + this._location.bucket + '/' + this._location.path;\n  };\n\n  Reference.prototype._newRef = function (service, location) {\n    return new Reference(service, location);\n  };\n\n  Object.defineProperty(Reference.prototype, \"root\", {\n    /**\r\n     * A reference to the root of this object's bucket.\r\n     */\n    get: function get() {\n      var location = new Location(this._location.bucket, '');\n      return this._newRef(this._service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"bucket\", {\n    /**\r\n     * The name of the bucket containing this reference's object.\r\n     */\n    get: function get() {\n      return this._location.bucket;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"fullPath\", {\n    /**\r\n     * The full path of this object.\r\n     */\n    get: function get() {\n      return this._location.path;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"name\", {\n    /**\r\n     * The short name of this object, which is the last component of the full path.\r\n     * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\r\n     */\n    get: function get() {\n      return lastComponent(this._location.path);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"storage\", {\n    /**\r\n     * The `StorageService` instance this `StorageReference` is associated with.\r\n     */\n    get: function get() {\n      return this._service;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    /**\r\n     * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\r\n     * this reference is the root.\r\n     */\n    get: function get() {\n      var newPath = parent(this._location.path);\n\n      if (newPath === null) {\n        return null;\n      }\n\n      var location = new Location(this._location.bucket, newPath);\n      return new Reference(this._service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Utility function to throw an error in methods that do not accept a root reference.\r\n   */\n\n  Reference.prototype._throwIfRoot = function (name) {\n    if (this._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n\n  return Reference;\n}();\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns An UploadTask\r\n */\n\n\nfunction uploadBytesResumable(ref, data, metadata) {\n  ref._throwIfRoot('uploadBytesResumable');\n\n  return new UploadTask(ref, new FbsBlob(data), metadata);\n}\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\n\n\nfunction listAll(ref) {\n  var accumulator = {\n    prefixes: [],\n    items: []\n  };\n  return listAllHelper(ref, accumulator).then(function () {\n    return accumulator;\n  });\n}\n/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */\n\n\nfunction listAllHelper(ref, accumulator, pageToken) {\n  return __awaiter(this, void 0, void 0, function () {\n    var opt, nextPage;\n\n    var _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          opt = {\n            // maxResults is 1000 by default.\n            pageToken: pageToken\n          };\n          return [4\n          /*yield*/\n          , list$1(ref, opt)];\n\n        case 1:\n          nextPage = _c.sent();\n\n          (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\n\n          (_b = accumulator.items).push.apply(_b, nextPage.items);\n\n          if (!(nextPage.nextPageToken != null)) return [3\n          /*break*/\n          , 3];\n          return [4\n          /*yield*/\n          , listAllHelper(ref, accumulator, nextPage.nextPageToken)];\n\n        case 2:\n          _c.sent();\n\n          _c.label = 3;\n\n        case 3:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\n\n\nfunction list$1(ref, options) {\n  return __awaiter(this, void 0, void 0, function () {\n    var authToken, op, requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (options != null) {\n            if (typeof options.maxResults === 'number') {\n              validateNumber('options.maxResults',\n              /* minValue= */\n              1,\n              /* maxValue= */\n              1000, options.maxResults);\n            }\n          }\n\n          return [4\n          /*yield*/\n          , ref.storage._getAuthToken()];\n\n        case 1:\n          authToken = _a.sent();\n          op = options || {};\n          requestInfo = list(ref.storage, ref._location,\n          /*delimiter= */\n          '/', op.pageToken, op.maxResults);\n          return [2\n          /*return*/\n          , ref.storage._makeRequest(requestInfo, authToken).getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * A promise that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\n\n\nfunction getMetadata$1(ref) {\n  return __awaiter(this, void 0, void 0, function () {\n    var authToken, requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('getMetadata');\n\n          return [4\n          /*yield*/\n          , ref.storage._getAuthToken()];\n\n        case 1:\n          authToken = _a.sent();\n          requestInfo = getMetadata(ref.storage, ref._location, getMappings());\n          return [2\n          /*return*/\n          , ref.storage._makeRequest(requestInfo, authToken).getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A promise that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */\n\n\nfunction updateMetadata$1(ref, metadata) {\n  return __awaiter(this, void 0, void 0, function () {\n    var authToken, requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('updateMetadata');\n\n          return [4\n          /*yield*/\n          , ref.storage._getAuthToken()];\n\n        case 1:\n          authToken = _a.sent();\n          requestInfo = updateMetadata(ref.storage, ref._location, metadata, getMappings());\n          return [2\n          /*return*/\n          , ref.storage._makeRequest(requestInfo, authToken).getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A promise that resolves with the download\r\n *     URL for this object.\r\n */\n\n\nfunction getDownloadURL(ref) {\n  return __awaiter(this, void 0, void 0, function () {\n    var authToken, requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('getDownloadURL');\n\n          return [4\n          /*yield*/\n          , ref.storage._getAuthToken()];\n\n        case 1:\n          authToken = _a.sent();\n          requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\n          return [2\n          /*return*/\n          , ref.storage._makeRequest(requestInfo, authToken).getPromise().then(function (url) {\n            if (url === null) {\n              throw noDownloadURL();\n            }\n\n            return url;\n          })];\n      }\n    });\n  });\n}\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A promise that resolves if the deletion succeeds.\r\n */\n\n\nfunction deleteObject$1(ref) {\n  return __awaiter(this, void 0, void 0, function () {\n    var authToken, requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('deleteObject');\n\n          return [4\n          /*yield*/\n          , ref.storage._getAuthToken()];\n\n        case 1:\n          authToken = _a.sent();\n          requestInfo = deleteObject(ref.storage, ref._location);\n          return [2\n          /*return*/\n          , ref.storage._makeRequest(requestInfo, authToken).getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n *\r\n * @param ref - StorageReference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n *\r\n */\n\n\nfunction _getChild(ref, childPath) {\n  var newPath = child(ref._location.path, childPath);\n  var location = new Location(ref._location.bucket, newPath);\n  return new Reference(ref.storage, location);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isUrl(path) {\n  return /^[A-Za-z]+:\\/\\//.test(path);\n}\n/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */\n\n\nfunction refFromURL(service, url) {\n  return new Reference(service, url);\n}\n/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */\n\n\nfunction refFromPath(ref, path) {\n  if (ref instanceof StorageService) {\n    var service = ref;\n\n    if (service._bucket == null) {\n      throw noDefaultBucket();\n    }\n\n    var reference = new Reference(service, service._bucket);\n\n    if (path != null) {\n      return refFromPath(reference, path);\n    } else {\n      return reference;\n    }\n  } else {\n    // ref is a Reference\n    if (path !== undefined) {\n      if (path.includes('..')) {\n        throw invalidArgument('`path` param cannot contain \"..\"');\n      }\n\n      return _getChild(ref, path);\n    } else {\n      return ref;\n    }\n  }\n}\n\nfunction ref(serviceOrRef, pathOrUrl) {\n  if (pathOrUrl && isUrl(pathOrUrl)) {\n    if (serviceOrRef instanceof StorageService) {\n      return refFromURL(serviceOrRef, pathOrUrl);\n    } else {\n      throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\n    }\n  } else {\n    return refFromPath(serviceOrRef, pathOrUrl);\n  }\n}\n\nfunction extractBucket(config) {\n  var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\n\n  if (bucketString == null) {\n    return null;\n  }\n\n  return Location.makeFromBucketSpec(bucketString);\n}\n/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @public\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n */\n\n\nvar StorageService =\n/** @class */\nfunction () {\n  function StorageService(\n  /**\r\n   * FirebaseApp associated with this StorageService instance.\r\n   */\n  app, _authProvider, _pool, _url, _firebaseVersion) {\n    this.app = app;\n    this._authProvider = _authProvider;\n    this._pool = _pool;\n    this._url = _url;\n    this._firebaseVersion = _firebaseVersion;\n    this._bucket = null;\n    this._appId = null;\n    this._deleted = false;\n    this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this._requests = new Set();\n\n    if (_url != null) {\n      this._bucket = Location.makeFromBucketSpec(_url);\n    } else {\n      this._bucket = extractBucket(this.app.options);\n    }\n  }\n\n  Object.defineProperty(StorageService.prototype, \"maxUploadRetryTime\", {\n    /**\r\n     * The maximum time to retry uploads in milliseconds.\r\n     */\n    get: function get() {\n      return this._maxUploadRetryTime;\n    },\n    set: function set(time) {\n      validateNumber('time',\n      /* minValue=*/\n      0,\n      /* maxValue= */\n      Number.POSITIVE_INFINITY, time);\n      this._maxUploadRetryTime = time;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StorageService.prototype, \"maxOperationRetryTime\", {\n    /**\r\n     * The maximum time to retry operations other than uploads or downloads in\r\n     * milliseconds.\r\n     */\n    get: function get() {\n      return this._maxOperationRetryTime;\n    },\n    set: function set(time) {\n      validateNumber('time',\n      /* minValue=*/\n      0,\n      /* maxValue= */\n      Number.POSITIVE_INFINITY, time);\n      this._maxOperationRetryTime = time;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StorageService.prototype._getAuthToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var auth, tokenData;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            auth = this._authProvider.getImmediate({\n              optional: true\n            });\n            if (!auth) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , auth.getToken()];\n\n          case 1:\n            tokenData = _a.sent();\n\n            if (tokenData !== null) {\n              return [2\n              /*return*/\n              , tokenData.accessToken];\n            }\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , null];\n        }\n      });\n    });\n  };\n  /**\r\n   * Stop running requests and prevent more from being created.\r\n   */\n\n\n  StorageService.prototype._delete = function () {\n    this._deleted = true;\n\n    this._requests.forEach(function (request) {\n      return request.cancel();\n    });\n\n    this._requests.clear();\n\n    return Promise.resolve();\n  };\n  /**\r\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n   * at the given Location.\r\n   */\n\n\n  StorageService.prototype._makeStorageReference = function (loc) {\n    return new Reference(this, loc);\n  };\n  /**\r\n   * @param requestInfo - HTTP RequestInfo object\r\n   * @param authToken - Firebase auth token\r\n   */\n\n\n  StorageService.prototype._makeRequest = function (requestInfo, authToken) {\n    var _this = this;\n\n    if (!this._deleted) {\n      var request_1 = makeRequest(requestInfo, this._appId, authToken, this._pool, this._firebaseVersion);\n\n      this._requests.add(request_1); // Request removes itself from set when complete.\n\n\n      request_1.getPromise().then(function () {\n        return _this._requests.delete(request_1);\n      }, function () {\n        return _this._requests.delete(request_1);\n      });\n      return request_1;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  };\n\n  return StorageService;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns An UploadTask\r\n */\n\n\nfunction uploadBytesResumable$1(ref, data, metadata) {\n  return uploadBytesResumable(ref, data, metadata);\n}\n/**\r\n * A promise that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\n\n\nfunction getMetadata$2(ref) {\n  return getMetadata$1(ref);\n}\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A promise that resolves with the new metadata for this object.\r\n */\n\n\nfunction updateMetadata$2(ref, metadata) {\n  return updateMetadata$1(ref, metadata);\n}\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\n\n\nfunction list$2(ref, options) {\n  return list$1(ref, options);\n}\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\n\n\nfunction listAll$1(ref) {\n  return listAll(ref);\n}\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A promise that resolves with the download\r\n *     URL for this object.\r\n */\n\n\nfunction getDownloadURL$1(ref) {\n  return getDownloadURL(ref);\n}\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A promise that resolves if the deletion succeeds.\r\n */\n\n\nfunction deleteObject$2(ref) {\n  return deleteObject$1(ref);\n}\n\nfunction ref$1(serviceOrRef, pathOrUrl) {\n  return ref(serviceOrRef, pathOrUrl);\n}\n/**\r\n * @internal\r\n */\n\n\nfunction _getChild$1(ref, childPath) {\n  return _getChild(ref, childPath);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar UploadTaskSnapshotCompat =\n/** @class */\nfunction () {\n  function UploadTaskSnapshotCompat(_delegate, task, ref) {\n    this._delegate = _delegate;\n    this.task = task;\n    this.ref = ref;\n  }\n\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"bytesTransferred\", {\n    get: function get() {\n      return this._delegate.bytesTransferred;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"metadata\", {\n    get: function get() {\n      return this._delegate.metadata;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"state\", {\n    get: function get() {\n      return this._delegate.state;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"totalBytes\", {\n    get: function get() {\n      return this._delegate.totalBytes;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return UploadTaskSnapshotCompat;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar UploadTaskCompat =\n/** @class */\nfunction () {\n  function UploadTaskCompat(_delegate, _ref) {\n    this._delegate = _delegate;\n    this._ref = _ref;\n    this.cancel = this._delegate.cancel.bind(this._delegate);\n    this.catch = this._delegate.catch.bind(this._delegate);\n    this.pause = this._delegate.pause.bind(this._delegate);\n    this.resume = this._delegate.resume.bind(this._delegate);\n  }\n\n  Object.defineProperty(UploadTaskCompat.prototype, \"snapshot\", {\n    get: function get() {\n      return new UploadTaskSnapshotCompat(this._delegate.snapshot, this, this._ref);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  UploadTaskCompat.prototype.then = function (onFulfilled, onRejected) {\n    var _this = this;\n\n    return this._delegate.then(function (snapshot) {\n      if (onFulfilled) {\n        return onFulfilled(new UploadTaskSnapshotCompat(snapshot, _this, _this._ref));\n      }\n    }, onRejected);\n  };\n\n  UploadTaskCompat.prototype.on = function (type, nextOrObserver, error, completed) {\n    var _this = this;\n\n    var wrappedNextOrObserver = undefined;\n\n    if (!!nextOrObserver) {\n      if (typeof nextOrObserver === 'function') {\n        wrappedNextOrObserver = function wrappedNextOrObserver(taskSnapshot) {\n          return nextOrObserver(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\n        };\n      } else {\n        wrappedNextOrObserver = {\n          next: !!nextOrObserver.next ? function (taskSnapshot) {\n            return nextOrObserver.next(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\n          } : undefined,\n          complete: nextOrObserver.complete || undefined,\n          error: nextOrObserver.error || undefined\n        };\n      }\n    }\n\n    return this._delegate.on(type, wrappedNextOrObserver, error || undefined, completed || undefined);\n  };\n\n  return UploadTaskCompat;\n}();\n\nvar ListResultCompat =\n/** @class */\nfunction () {\n  function ListResultCompat(_delegate, _service) {\n    this._delegate = _delegate;\n    this._service = _service;\n  }\n\n  Object.defineProperty(ListResultCompat.prototype, \"prefixes\", {\n    get: function get() {\n      var _this = this;\n\n      return this._delegate.prefixes.map(function (ref) {\n        return new ReferenceCompat(ref, _this._service);\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ListResultCompat.prototype, \"items\", {\n    get: function get() {\n      var _this = this;\n\n      return this._delegate.items.map(function (ref) {\n        return new ReferenceCompat(ref, _this._service);\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ListResultCompat.prototype, \"nextPageToken\", {\n    get: function get() {\n      return this._delegate.nextPageToken || null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return ListResultCompat;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *  http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ReferenceCompat =\n/** @class */\nfunction () {\n  function ReferenceCompat(_delegate, storage) {\n    this._delegate = _delegate;\n    this.storage = storage;\n  }\n\n  Object.defineProperty(ReferenceCompat.prototype, \"name\", {\n    get: function get() {\n      return this._delegate.name;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceCompat.prototype, \"bucket\", {\n    get: function get() {\n      return this._delegate.bucket;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceCompat.prototype, \"fullPath\", {\n    get: function get() {\n      return this._delegate.fullPath;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ReferenceCompat.prototype.toString = function () {\n    return this._delegate.toString();\n  };\n  /**\r\n   * @returns A reference to the object obtained by\r\n   * appending childPath, removing any duplicate, beginning, or trailing\r\n   * slashes.\r\n   */\n\n\n  ReferenceCompat.prototype.child = function (childPath) {\n    var reference = _getChild$1(this._delegate, childPath);\n\n    return new ReferenceCompat(reference, this.storage);\n  };\n\n  Object.defineProperty(ReferenceCompat.prototype, \"root\", {\n    get: function get() {\n      return new ReferenceCompat(this._delegate.root, this.storage);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceCompat.prototype, \"parent\", {\n    /**\r\n     * @returns A reference to the parent of the\r\n     * current object, or null if the current object is the root.\r\n     */\n    get: function get() {\n      var reference = this._delegate.parent;\n\n      if (reference == null) {\n        return null;\n      }\n\n      return new ReferenceCompat(reference, this.storage);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Uploads a blob to this object's location.\r\n   * @param data - The blob to upload.\r\n   * @returns An UploadTask that lets you control and\r\n   * observe the upload.\r\n   */\n\n  ReferenceCompat.prototype.put = function (data, metadata) {\n    this._throwIfRoot('put');\n\n    return new UploadTaskCompat(uploadBytesResumable$1(this._delegate, data, metadata), this);\n  };\n  /**\r\n   * Uploads a string to this object's location.\r\n   * @param value - The string to upload.\r\n   * @param format - The format of the string to upload.\r\n   * @returns An UploadTask that lets you control and\r\n   * observe the upload.\r\n   */\n\n\n  ReferenceCompat.prototype.putString = function (value, format, metadata) {\n    if (format === void 0) {\n      format = StringFormat.RAW;\n    }\n\n    this._throwIfRoot('putString');\n\n    var data = dataFromString(format, value);\n\n    var metadataClone = __assign({}, metadata);\n\n    if (metadataClone['contentType'] == null && data.contentType != null) {\n      metadataClone['contentType'] = data.contentType;\n    }\n\n    return new UploadTaskCompat(new UploadTask(this._delegate, new FbsBlob(data.data, true), metadataClone), this);\n  };\n  /**\r\n   * List all items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * This is a helper method for calling list() repeatedly until there are\r\n   * no more results. The default pagination size is 1000.\r\n   *\r\n   * Note: The results may not be consistent if objects are changed while this\r\n   * operation is running.\r\n   *\r\n   * Warning: listAll may potentially consume too many resources if there are\r\n   * too many results.\r\n   *\r\n   * @returns A Promise that resolves with all the items and prefixes under\r\n   *  the current storage reference. `prefixes` contains references to\r\n   *  sub-directories and `items` contains references to objects in this\r\n   *  folder. `nextPageToken` is never returned.\r\n   */\n\n\n  ReferenceCompat.prototype.listAll = function () {\n    var _this = this;\n\n    return listAll$1(this._delegate).then(function (r) {\n      return new ListResultCompat(r, _this.storage);\n    });\n  };\n  /**\r\n   * List items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * List API is only available for Firebase Rules Version 2.\r\n   *\r\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n   * delimited folder structure. Refer to GCS's List API if you want to learn more.\r\n   *\r\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n   * support objects whose paths end with \"/\" or contain two consecutive\r\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n   * list() may fail if there are too many unsupported objects in the bucket.\r\n   *\r\n   * @param options - See ListOptions for details.\r\n   * @returns A Promise that resolves with the items and prefixes.\r\n   * `prefixes` contains references to sub-folders and `items`\r\n   * contains references to objects in this folder. `nextPageToken`\r\n   * can be used to get the rest of the results.\r\n   */\n\n\n  ReferenceCompat.prototype.list = function (options) {\n    var _this = this;\n\n    return list$2(this._delegate, options || undefined).then(function (r) {\n      return new ListResultCompat(r, _this.storage);\n    });\n  };\n  /**\r\n   * A promise that resolves with the metadata for this object. If this\r\n   * object doesn't exist or metadata cannot be retreived, the promise is\r\n   * rejected.\r\n   */\n\n\n  ReferenceCompat.prototype.getMetadata = function () {\n    return getMetadata$2(this._delegate);\n  };\n  /**\r\n   * Updates the metadata for this object.\r\n   * @param metadata - The new metadata for the object.\r\n   * Only values that have been explicitly set will be changed. Explicitly\r\n   * setting a value to null will remove the metadata.\r\n   * @returns A promise that resolves\r\n   * with the new metadata for this object.\r\n   * @see firebaseStorage.Reference.prototype.getMetadata\r\n   */\n\n\n  ReferenceCompat.prototype.updateMetadata = function (metadata) {\n    return updateMetadata$2(this._delegate, metadata);\n  };\n  /**\r\n   * @returns A promise that resolves with the download\r\n   * URL for this object.\r\n   */\n\n\n  ReferenceCompat.prototype.getDownloadURL = function () {\n    return getDownloadURL$1(this._delegate);\n  };\n  /**\r\n   * Deletes the object at this location.\r\n   * @returns A promise that resolves if the deletion succeeds.\r\n   */\n\n\n  ReferenceCompat.prototype.delete = function () {\n    this._throwIfRoot('delete');\n\n    return deleteObject$2(this._delegate);\n  };\n\n  ReferenceCompat.prototype._throwIfRoot = function (name) {\n    if (this._delegate._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n\n  return ReferenceCompat;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n */\n\n\nvar StorageServiceCompat =\n/** @class */\nfunction () {\n  function StorageServiceCompat(app, _delegate) {\n    var _this = this;\n\n    this.app = app;\n    this._delegate = _delegate;\n    this.INTERNAL = {\n      /**\r\n       * Called when the associated app is deleted.\r\n       */\n      delete: function _delete() {\n        return _this._delegate._delete();\n      }\n    };\n  }\n\n  Object.defineProperty(StorageServiceCompat.prototype, \"maxOperationRetryTime\", {\n    get: function get() {\n      return this._delegate.maxOperationRetryTime;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StorageServiceCompat.prototype, \"maxUploadRetryTime\", {\n    get: function get() {\n      return this._delegate.maxUploadRetryTime;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns a firebaseStorage.Reference for the given path in the default\r\n   * bucket.\r\n   */\n\n  StorageServiceCompat.prototype.ref = function (path) {\n    if (isUrl(path)) {\n      throw invalidArgument('ref() expected a child path but got a URL, use refFromURL instead.');\n    }\n\n    return new ReferenceCompat(ref$1(this._delegate, path), this);\n  };\n  /**\r\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n   * which must be a gs:// or http[s]:// URL.\r\n   */\n\n\n  StorageServiceCompat.prototype.refFromURL = function (url) {\n    if (!isUrl(url)) {\n      throw invalidArgument('refFromURL() expected a full URL but got a child path, use ref() instead.');\n    }\n\n    try {\n      Location.makeFromUrl(url);\n    } catch (e) {\n      throw invalidArgument('refFromUrl() expected a valid full URL but got an invalid one.');\n    }\n\n    return new ReferenceCompat(ref$1(this._delegate, url), this);\n  };\n\n  StorageServiceCompat.prototype.setMaxUploadRetryTime = function (time) {\n    this._delegate.maxUploadRetryTime = time;\n  };\n\n  StorageServiceCompat.prototype.setMaxOperationRetryTime = function (time) {\n    this._delegate.maxOperationRetryTime = time;\n  };\n\n  return StorageServiceCompat;\n}();\n\nvar name = \"@firebase/storage\";\nvar version = \"0.4.5\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Type constant for Firebase Storage.\r\n */\n\nvar STORAGE_TYPE = 'storage';\n\nfunction factory(container, _a) {\n  var url = _a.instanceIdentifier; // Dependencies\n  // TODO: This should eventually be 'app-compat'\n\n  var app = container.getProvider('app').getImmediate();\n  var authProvider = container.getProvider('auth-internal'); // TODO: get StorageService instance from component framework instead\n  // of creating a new one.\n\n  var storageServiceCompat = new StorageServiceCompat(app, new StorageService(app, authProvider, new XhrIoPool(), url, firebase.SDK_VERSION));\n  return storageServiceCompat;\n}\n\nfunction registerStorage(instance) {\n  var namespaceExports = {\n    // no-inline\n    TaskState: TaskState,\n    TaskEvent: TaskEvent,\n    StringFormat: StringFormat,\n    Storage: StorageService,\n    Reference: ReferenceCompat\n  };\n  instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps(namespaceExports).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n}\n\nregisterStorage(firebase);\nexport { registerStorage };"],"sourceRoot":""}